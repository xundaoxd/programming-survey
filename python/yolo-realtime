#!/usr/bin/env python3
import argparse
import cv2
from ultralytics import YOLO


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('-d', '--device', type=int, default=None)
    parser.add_argument('-f', '--file', type=str, default=None)
    parser.add_argument('-s', '--size', type=str, default=None)
    parser.add_argument('-w', '--weight', type=str, default='yolov8n.pt')
    return parser.parse_args()


def main():
    args = parse_args()
    if args.device:
        cap = cv2.VideoCapture(args.device)
    elif args.file:
        cap = cv2.VideoCapture(args.file)
    else:
        assert False, 'undefined device or file'

    if args.size:
        w, h = args.size.split('x')
        w, h = int(w), int(h)
        cap.set(cv2.CV_CAP_PROP_FRAME_WIDTH, w)
        cap.set(cv2.CV_CAP_PROP_FRAME_HEIGHT, h)

    model = YOLO(args.weight)
    classNames = ["person", "bicycle", "car", "motorbike", "aeroplane", "bus", "train", "truck", "boat",
                  "traffic light", "fire hydrant", "stop sign", "parking meter", "bench", "bird", "cat",
                  "dog", "horse", "sheep", "cow", "elephant", "bear", "zebra", "giraffe", "backpack", "umbrella",
                  "handbag", "tie", "suitcase", "frisbee", "skis", "snowboard", "sports ball", "kite", "baseball bat",
                  "baseball glove", "skateboard", "surfboard", "tennis racket", "bottle", "wine glass", "cup",
                  "fork", "knife", "spoon", "bowl", "banana", "apple", "sandwich", "orange", "broccoli",
                  "carrot", "hot dog", "pizza", "donut", "cake", "chair", "sofa", "pottedplant", "bed",
                  "diningtable", "toilet", "tvmonitor", "laptop", "mouse", "remote", "keyboard", "cell phone",
                  "microwave", "oven", "toaster", "sink", "refrigerator", "book", "clock", "vase", "scissors",
                  "teddy bear", "hair drier", "toothbrush"
                  ]

    while cap.isOpened():
        success, img = cap.read()
        assert success, 'cannot recv frame'

        results = model(img, stream=True)
        for r in results:
            for box in r.boxes:
                x1, y1, x2, y2 = list(map(int, box.xyxy[0]))
                cv2.rectangle(img, (x1, y1), (x2, y2), (255, 0, 255), 3)
                cv2.putText(img, classNames[int(box.cls[0])], [x1, y1],
                            cv2.FONT_HERSHEY_SIMPLEX, 1, (255, 0, 0), 2)
        cv2.imshow('Webcam', img)
        if cv2.waitKey(1) == ord('q'):
            break

    cap.release()
    cv2.destroyAllWindows()


if __name__ == "__main__":
    main()
